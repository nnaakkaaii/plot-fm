name: CI on Push

on:
  push:
    paths-ignore:
      - '**/*.md'
    branches-ignore:
      - main

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: PyTest
        run: |
          for p in $(ls -d */); do python -m pytest $p --doctest-modules --junit-xml results/pytest_${p:0:-1}.xml; done
          python -m pytest test --junit-xml results/pytest.xml
        continue-on-error: true
      - name: Upload Unit Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Python 3.7)
          path: results/*.xml
      - name: Download Artifacts
        if: success() || failure()
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml

  flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'flake8'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install isort
      - name: PyTest
        run: |
          for p in $(ls -d */); do python -m isort $p --check-only; done

  mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install isort
      - name: PyTest
        run: |
          for p in $(ls -d */); do python -m mypy $p; done
